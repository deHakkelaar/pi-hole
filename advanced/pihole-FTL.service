#!/bin/sh

### BEGIN INIT INFO
# Provides:        pihole-FTL
# Required-Start:  $network $remote_fs $syslog
# Required-Stop:   $network $remote_fs $syslog
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: pihole-FTL daemon
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin

. /lib/lsb/init-functions

DAEMON=/usr/bin/pihole-FTL
PIDFILE=/run/pihole-FTL.pid
LOCKFILE=/var/lock/pihole-FTL
RUNASUSER=pihole

UGID=$(getent passwd $RUNASUSER | cut -f 3,4 -d:) || true

lock_pihole-FTL() {
        if [ -x /usr/bin/lockfile-create ]; then
                lockfile-create $LOCKFILE
                lockfile-touch $LOCKFILE &
                LOCKTOUCHPID="$!"
        fi
}

unlock_pihole-FTL() {
        if [ -x /usr/bin/lockfile-create ] ; then
                kill $LOCKTOUCHPID
                lockfile-remove $LOCKFILE
        fi
}


case $1 in
        start)
                log_daemon_msg "Starting pihole-FTL" "pihole-FTL"
                if [ -z "$UGID" ]; then
                        log_failure_msg "user \"$RUNASUSER\" does not exist"
                        exit 1
                fi
                lock_pihole-FTL
                start-stop-daemon --start --quiet --oknodo --pidfile $PIDFILE -c $UGID --startas $DAEMON 
                status=$?
                unlock_pihole-FTL
                log_end_msg $status
                ;;
        stop)
                log_daemon_msg "Stopping pihole-FTL" "pihole-FTL"
                start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
                log_end_msg $?
                rm -f $PIDFILE
                ;;
        restart)
                $0 stop && sleep 2 && $0 start
                ;;

        status)
                status_of_proc $DAEMON "pihole-FTL"
                ;;
        *)
                echo "Usage: $0 {start|stop|restart|status}"
                exit 2
                ;;
esac
